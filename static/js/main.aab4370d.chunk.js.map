{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","components/adsense/googleAd.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","onSearchChange","GoogleAd","googleInit","timeout","this","setTimeout","window","adsbygoogle","push","clearTimeout","classNames","slot","style","display","textAlign","data-ad-layout","data-ad-format","data-ad-client","data-ad-slot","Component","defaultProps","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCNTC,EAAW,SAACR,GAAD,OACtB,qBAAKC,UAAW,YAAhB,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJZM,G,MAAY,SAACX,GAAD,OACvB,uBACEC,UAAU,aACVW,KAAK,SACLC,YAAY,kBACZC,SAAUd,EAAMe,mBCHdC,E,4MACJC,WAAa,K,uDAEb,WAAqB,IACXC,EAAYC,KAAKnB,MAAjBkB,QACRC,KAAKF,WAAaG,YAAW,WACL,qBAAXC,SACRA,OAAOC,YAAcD,OAAOC,aAAe,IAAIC,KAAK,MACtDL,K,kCAGL,WACMC,KAAKF,YAAYO,aAAaL,KAAKF,c,oBAGzC,WAAU,IAAD,EACsBE,KAAKnB,MAA1ByB,EADD,EACCA,WAAYC,EADb,EACaA,KACpB,OACE,qBAAKzB,UAAWwB,EAAhB,SACE,qBACExB,UAAU,cACV0B,MAAO,CAAEC,QAAS,QAASC,UAAW,UACtCC,iBAAe,aACfC,iBAAe,QACfC,iBA1BS,0BA2BTC,eAAcP,U,GAzBDQ,aAsCvBlB,EAASmB,aAAe,CACtBV,WAAY,GACZP,QAAS,KAGIF,QCHAoB,G,wDAtCb,aAAe,IAAD,8BACZ,gBAcFrB,eAAiB,SAACsB,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXjC,SAAU,GACV8B,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAE7B,SAAUsC,S,oBAO/C,WAAU,IAAD,EAC2B5B,KAAKuB,MAA/BjC,EADD,EACCA,SAAU8B,EADX,EACWA,YACZS,EAAmBvC,EAASwC,QAAO,SAAC7C,GAAD,OACvCA,EAAQE,KAAK4C,cAAcC,SAASZ,EAAYW,kBAGlD,OACE,sBAAKjD,UAAU,MAAf,UACE,cAAC,EAAD,CAAUyB,KAAK,aAAaD,WAAW,aACvC,kDACA,cAAC,EAAD,CAAWV,eAAgBI,KAAKJ,iBAChC,cAAC,EAAD,CAAUN,SAAUuC,IACpB,cAAC,EAAD,CAAUtB,KAAK,aAAaR,QAAS,IAAMO,WAAW,gBACtD,cAAC,EAAD,CAAUC,KAAK,aAAaR,QAAS,IAAMO,WAAW,uB,GAjC5CS,cCMHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aab4370d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      alt=\"monster\"\r\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n    ></img>\r\n    <h1>{props.monster.name}</h1>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => (\r\n  <div className={\"card-list\"}>\r\n    {props.monsters.map((monster) => (\r\n      <Card key={monster.id} monster={monster}></Card>\r\n    ))}\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = (props) => (\r\n  <input\r\n    className=\"search-box\"\r\n    type=\"search\"\r\n    placeholder=\"search monsters\"\r\n    onChange={props.onSearchChange}\r\n  />\r\n);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst googleAdId = 'ca-pub-4137242124503361';\r\n\r\nclass GoogleAd extends Component {\r\n  googleInit = null;\r\n\r\n  componentDidMount() {\r\n    const { timeout } = this.props;\r\n    this.googleInit = setTimeout(() => {\r\n      if (typeof window !== 'undefined')\r\n        (window.adsbygoogle = window.adsbygoogle || []).push({});\r\n    }, timeout);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.googleInit) clearTimeout(this.googleInit);\r\n  }\r\n\r\n  render() {\r\n    const { classNames, slot } = this.props;\r\n    return (\r\n      <div className={classNames}>\r\n        <ins\r\n          className=\"adsbygoogle\"\r\n          style={{ display: 'block', textAlign: 'center' }}\r\n          data-ad-layout=\"in-article\"\r\n          data-ad-format=\"fluid\"\r\n          data-ad-client={googleAdId}\r\n          data-ad-slot={slot}\r\n        ></ins>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGoogleAd.propTypes = {\r\n  classNames: PropTypes.string,\r\n  slot: PropTypes.string,\r\n  timeout: PropTypes.number\r\n};\r\n\r\nGoogleAd.defaultProps = {\r\n  classNames: '',\r\n  timeout: 200\r\n};\r\n\r\nexport default GoogleAd;\r\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport GoogleAd from './components/adsense/googleAd.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <GoogleAd slot=\"3052648734\" classNames=\"page-top\" />\n        <h1>Monsters Rolodex</h1>\n        <SearchBox onSearchChange={this.onSearchChange} />\n        <CardList monsters={filteredMonsters} />\n        <GoogleAd slot=\"7482848338\" timeout={1000} classNames=\"page-bottom\" />\n        <GoogleAd slot=\"1060798018\" timeout={1000} classNames=\"page-bottom\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}